plugins {
  id "org.jenkins-ci.jpi" version "0.22.0"
}

group = "org.jenkins-ci.plugins"
description = "This plugin adds Gradle support to Jenkins"

ext.ciBuild = System.getenv()['JENKINS_URL'] ? true : false

if (ciBuild) {
  println 'This build is running on CI'
}

jenkinsPlugin {
  // Version of Jenkins core this plugin depends on.
  coreVersion = "1.642.1"

  // Human-readable name of plugin.
  displayName = "Gradle Plugin"

  // URL for plugin on Jenkins wiki or elsewhere.
  url = "http://wiki.jenkins-ci.org/display/JENKINS/Gradle+Plugin"   

  // Plugin URL on GitHub. Optional.
  gitHubUrl = "https://github.com/jenkinsci/gradle-plugin"

  // Plugin ID, defaults to the project name without trailing '-plugin'
  shortName = "gradle"

  compatibleSinceVersion = '1.0'

  developers {
    developer {
      id 'wolfs'
      name 'Stefan Wolf'
    }
  }

  disabledTestInjection = false
}

sourceCompatibility = '1.7'

dependencies {
  compile 'org.jenkins-ci.lib:dry-run-lib:0.1'
  compileOnly 'org.jenkins-ci:symbol-annotation:1.3'
  jenkinsPlugins 'org.jenkins-ci.plugins:structs:1.3@jar'

  testCompile 'org.spockframework:spock-core:0.7-groovy-1.8'
  jenkinsTest 'org.jenkins-ci.main:jenkins-test-harness:2.8@jar'
}

if (project.hasProperty("maxParallelForks")) {
  project.maxParallelForks = Integer.valueOf(project.maxParallelForks, 10)
} else {
  ext.maxParallelForks = 3
}


test {
  systemProperties["hudson.model.DownloadService.noSignatureCheck"] = "true"
  ignoreFailures = ciBuild
  maxParallelForks = project.maxParallelForks
}

defaultTasks 'test', 'jpi'
